---
services:
  s3-antivirus:
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/s3-antivirus:latest
    build:
      dockerfile: docker/opg-s3-antivirus/Dockerfile
    environment:
      AWS_REGION: eu-west-1
      AWS_S3_ENDPOINT: http://localstack:4566
      AWS_ACCESS_KEY_ID: localstack
      AWS_SECRET_ACCESS_KEY: localstack
      ANTIVIRUS_TAG_KEY: virus-scan-status
      ANTIVIRUS_TAG_VALUE_PASS: ok
      ANTIVIRUS_TAG_VALUE_FAIL: infected
      ANTIVIRUS_DEFINITIONS_BUCKET: virus-definitions
    volumes:
      - ".aws-lambda-rie:/aws-lambda"
    entrypoint: /aws-lambda/aws-lambda-rie /var/task/main

  s3-antivirus-update:
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/s3-antivirus-update:latest
    build:
      dockerfile: docker/opg-s3-antivirus-update/Dockerfile
    environment:
      AWS_REGION: eu-west-1
      AWS_S3_ENDPOINT: http://localstack:4566
      AWS_ACCESS_KEY_ID: localstack
      AWS_SECRET_ACCESS_KEY: localstack
      ANTIVIRUS_DEFINITIONS_BUCKET: virus-definitions
    volumes:
      - ".aws-lambda-rie:/aws-lambda"
    entrypoint: /aws-lambda/aws-lambda-rie /var/task/main

  localstack:
    image: localstack/localstack:4.3
    depends_on: [ s3-antivirus, s3-antivirus-update ]
    volumes:
      - "./scripts/localstack/init:/etc/localstack/init/ready.d"
      - "./scripts/localstack/wait:/scripts/wait"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./scripts/localstack/lambda-src:/lambda"
    environment:
      AWS_DEFAULT_REGION: eu-west-1
    healthcheck:
      test: [ "CMD-SHELL", "curl http://localhost:4566 || exit 1" ]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s

  go-lint:
    image: golangci/golangci-lint:v2.1.5
    working_dir: /go/src/app
    volumes:
      - ./:/go/src/app
      - ./.cache/golangci-lint/v1.53.3:/root/.cache
    command: golangci-lint run -v --timeout 5m --enable gosec --output.text.path stdout --output.sarif.path test-results/golangci-lint.sarif

  test-runner:
    image: s3-antivirius-test-runner:latest
    build:
      context: docker/test-runner/
    command: gotestsum --junitfile test-results/unit-tests.xml -- ./... -coverprofile=test-results/test-coverage.txt
    working_dir: /go/src/app
    volumes:
      - ./:/go/src/app
      - ./.gocache:/go/pkg/mod

  trivy:
    image: aquasec/trivy:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.trivy-cache:/root/.cache
      - ./test-results:/test-results
      - ./.trivyignore:/.trivyignore
    environment:
      - TRIVY_DB_REPOSITORY=${TRIVY_DB_REPOSITORY}
      - TRIVY_JAVA_DB_REPOSITORY=${TRIVY_JAVA_DB_REPOSITORY}
      - TRIVY_USERNAME=${DOCKER_USERNAME}
      - TRIVY_PASSWORD=${DOCKER_PASSWORD}
